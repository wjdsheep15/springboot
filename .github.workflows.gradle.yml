name: Java CI / CD with Gradle

# dev 브랜치에 push, PR 이벤트 발생시 동작.
on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Java 및 Docker 빌드를 위한 환경 설정
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Java 빌드를 위한 ./gradlew 파일 권한 변경
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # Java 빌드
      - name: Spring Boot Build
        run: ./gradlew clean build -x test

      # Docker Hub 에 Login
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      # DockerFile 을 기반으로 Docker Image 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/airbnb-backend-demo .

      # Docker Hub 에 빌드된 이미지 push
      - name: docker Hub push
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/airbnb-backend-demo
            
            # GET GitHub IP
            - name: get GitHub IP
              id: ip
              uses: haythem/public-ip@v1.2

            # Configure AWS Credentials - AWS 접근 권한 취득(IAM)
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-northeast-2

            # Add github ip to AWS
            - name: Add GitHub IP to AWS
              run: |
                aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

            # AWS EC2 Server Connect & Docker 명령어 실행
            - name: AWS EC2 Connection
              uses: appleboy/ssh-action@v0.1.6
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_USERNAME }}
                password: ${{ secrets.EC2_PASSWORD }}
                port: ${{ secrets.EC2_SSH_PORT }}
                timeout: 300s
                script: |
                  sudo docker stop airbnb-backend-demo
                  sudo docker rm airbnb-backend-demo
                  sudo docker run -it -d -p 8080:8080 --name airbnb-backend-demo leeguma/airbnb-backend-demo

            # REMOVE Github IP FROM security group
            - name: Remove IP FROM security group
              run: |
                aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32